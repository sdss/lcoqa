#!/usr/bin/env python

from __future__ import division
from __future__ import print_function
from __future__ import absolute_import

# Process exposures into a roll-up file for one MJD

import numpy as np
import fitsio
import argparse
import lcoqa
import os
import sys


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Summarize signal and S/N",
                                     usage="signal_qa --mjd 12345 --telescope lco")
    parser.add_argument("-m", "--mjd", type=np.int32,
                        required=True, help="MJD to process")
    parser.add_argument("-t", "--telescope", type=str,
                        required=True,
                        help="telescope guider images to process",
                        choices=['lco', 'apo'])
    args = parser.parse_args()

    outdir = os.path.join(os.getenv('LCOQA_DATA'), args.telescope,
                          str(args.mjd))
    try:
        os.makedirs(outdir)
    except OSError:
        if not os.path.isdir(outdir):
            raise

    expfile = os.path.join(outdir,
                           'exposures-{mjd}.fits'.format(mjd=args.mjd))
    try:
        exposures = fitsio.read(expfile)
    except:
        print("No exposure file for: {mjd}".format(mjd=args.mjd))
        sys.exit(1)

    for exposure in exposures:
        signal, signal_fibers = lcoqa.signal(exposure=exposure)
        if((signal is not None) and (signal_fibers is not None)):
            sigbase = 'signal-{mjd}-{expno}.fits'.format(mjd=args.mjd,
                                                         expno=exposure['expno'])
            sigfile = os.path.join(outdir, sigbase)

            fitsio.write(sigfile, signal, clobber=True)
            fitsio.write(sigfile, signal_fibers, clobber=False)
